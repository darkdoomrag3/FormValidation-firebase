{"ast":null,"code":"import firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/app';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAw9J9lGACATu_jI9vOPh_bLx4cv8z1g74\",\n  authDomain: \"fromvalidation.firebaseapp.com\",\n  databaseURL: \"https://fromvalidation.firebaseio.com\",\n  projectId: \"fromvalidation\",\n  storageBucket: \"fromvalidation.appspot.com\",\n  messagingSenderId: \"1080885689717\",\n  appId: \"1:1080885689717:web:856b74440d330c9b94a73c\",\n  measurementId: \"G-MC53EGBRQ0\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email,\n      displayName,\n      photoURL\n    } = user;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};","map":{"version":3,"sources":["D:/React-SearchApp/search-app/src/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","auth","firestore","provider","GoogleAuthProvider","generateUserDocument","user","additionalData","userRef","doc","uid","snapshot","get","exists","email","displayName","photoURL","set","error","console","getUserDocument","userDocument","data"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,eAAP;AACA,OAAO,cAAP;AAEA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,yCADS;AAEjBC,EAAAA,UAAU,EAAE,gCAFK;AAGjBC,EAAAA,WAAW,EAAE,uCAHI;AAIjBC,EAAAA,SAAS,EAAE,gBAJM;AAKjBC,EAAAA,aAAa,EAAE,4BALE;AAMjBC,EAAAA,iBAAiB,EAAE,eANF;AAOjBC,EAAAA,KAAK,EAAE,4CAPU;AAQjBC,EAAAA,aAAa,EAAE;AARE,CAArB,C,CAUE;;AACAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AACAD,QAAQ,CAACW,SAAT;AACA,OAAO,MAAMC,IAAI,GAAGZ,QAAQ,CAACY,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AACP,MAAMC,QAAQ,GAAG,IAAId,QAAQ,CAACY,IAAT,CAAcG,kBAAlB,EAAjB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AAClE,MAAI,CAACD,IAAL,EAAW;AACX,QAAME,OAAO,GAAGN,SAAS,CAACO,GAAV,CAAe,SAAQH,IAAI,CAACI,GAAI,EAAhC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,QAAmCV,IAAzC;;AACA,QAAI;AACF,YAAME,OAAO,CAACS,GAAR,CAAY;AAChBF,QAAAA,WADgB;AAEhBD,QAAAA,KAFgB;AAGhBE,QAAAA,QAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOW,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD;AACF;;AACD,SAAOE,eAAe,CAACd,IAAI,CAACI,GAAN,CAAtB;AACD,CAlBM;;AAmBP,MAAMU,eAAe,GAAG,MAAMV,GAAN,IAAa;AACnC,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;;AACV,MAAI;AACF,UAAMW,YAAY,GAAG,MAAMnB,SAAS,CAACO,GAAV,CAAe,SAAQC,GAAI,EAA3B,EAA8BE,GAA9B,EAA3B;AACA,WAAO;AACLF,MAAAA,GADK;AAEL,SAAGW,YAAY,CAACC,IAAb;AAFE,KAAP;AAID,GAND,CAME,OAAOJ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD;AACF,CAXD","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/auth'\r\nimport 'firebase/app'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAw9J9lGACATu_jI9vOPh_bLx4cv8z1g74\",\r\n    authDomain: \"fromvalidation.firebaseapp.com\",\r\n    databaseURL: \"https://fromvalidation.firebaseio.com\",\r\n    projectId: \"fromvalidation\",\r\n    storageBucket: \"fromvalidation.appspot.com\",\r\n    messagingSenderId: \"1080885689717\",\r\n    appId: \"1:1080885689717:web:856b74440d330c9b94a73c\",\r\n    measurementId: \"G-MC53EGBRQ0\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore()\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export const generateUserDocument = async (user, additionalData) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n      const { email, displayName, photoURL } = user;\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          photoURL,\r\n          ...additionalData\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error creating user document\", error);\r\n      }\r\n    }\r\n    return getUserDocument(user.uid);\r\n  };\r\n  const getUserDocument = async uid => {\r\n    if (!uid) return null;\r\n    try {\r\n      const userDocument = await firestore.doc(`users/${uid}`).get();\r\n      return {\r\n        uid,\r\n        ...userDocument.data()\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching user\", error);\r\n    }\r\n  };\r\n\r\n"]},"metadata":{},"sourceType":"module"}